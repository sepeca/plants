API: Check Admin Existence
Endpoint: /api/check_admin
Method: GET
Description: Checks if there is an admin user in the database.
Response:
  - Success: { "status": "success" }
  - Failure: { "status": "failure" }

API: Get Organization Name
Endpoint: /api/get_organization
Method: GET
Description: Retrieves the name of the organization for the login form.
Response:
  - Success: { "organization_name": "Organization Name" }
  - Failure: { "organization_name": null }

API: Register Admin
Endpoint: /api/register_self
Method: POST
Description: Registers a new admin user and creates an organization.
Request Body:
  - organization: string
  - username: string
  - email: string
  - password: string
Response:
  - Success: { "status": "success" }
  - Failure: { "status": "failure", "message": "Error message" }

API: Login
Endpoint: /api/login
Method: POST
Description: Authenticates a user and returns a token.
Request Body:
  - username: string
  - password: string
Response:
  - Success: { "token": "JWT Token", "username": "Username", "role": "Role" }
  - Failure: { "status": "failure", "message": "Invalid credentials" }

API: Get Tasks
Endpoint: /api/get_tasks
Method: GET
Description: Retrieves a list of tasks for the calendar.
Request Parameters:
  - role: string (admin or user)
  - status: string (e.g., "unfinished")
Response:
  - Success: Array of task objects
  - Failure: { "status": "failure", "message": "Error message" }

API: Get Task Details
Endpoint: /api/get_task_details
Method: GET
Description: Retrieves detailed information about a specific task.
Request Parameters:
  - id: integer (task ID)
Response:
  - Success: { "id": integer, "last_event": "Date", "caretaker": "Name", "description": "Task description", "photos": ["URL1", "URL2"] }
  - Failure: { "status": "failure", "message": "Error message" }

API: Finish Tasks
Endpoint: /api/finish_tasks
Method: POST
Description: Marks selected tasks as finished.
Request Body:
  - task_ids: array of integers
Response:
  - Success: { "status": "success" }
  - Failure: { "status": "failure", "message": "Error message" }

API: Change Password
Endpoint: /api/change_password
Method: POST
Description: Allows a user to change their password.
Headers:
  - Authorization: Bearer <authToken>
Request Body:
  - currentPassword: string
  - newPassword: string
Response:
  - Success: { "status": "success" }
  - Failure: { "status": "failure", "message": "Error message" }

API: Get Users
Endpoint: /api/get_users
Method: GET
Description: Retrieves a list of all users.
Response:
  - Success: Array of user objects
  - Failure: { "status": "failure", "message": "Error message" }

API: Add User
Endpoint: /api/add_user
Method: POST
Description: Adds a new user to the system.
Request Body:
  - username: string
  - email: string
  - password: string
  - isAdmin: boolean
Response:
  - Success: { "status": "success" }
  - Failure: { "status": "failure", "message": "Error message" }

API: Delete Users
Endpoint: /api/delete_users
Method: POST
Description: Deletes selected users from the system.
Request Body:
  - userIds: array of integers
Response:
  - Success: { "status": "success" }
  - Failure: { "status": "failure", "message": "Error message" }

API: Toggle Admin
Endpoint: /api/toggle_admin
Method: POST
Description: Toggles the admin role for a user.
Request Body:
  - userId: integer
  - isAdmin: boolean
Response:
  - Success: { "status": "success" }
  - Failure: { "status": "failure", "message": "Error message" }

API: Add Plant
Endpoint: /api/add_plant
Method: POST
Description: Adds a new plant to the system.
Request Body:
  - plantName: string
  - species: string
  - room: string
  - task: string
  - date: string (YYYY-MM-DD)
  - time: string (HH:MM)
Response:
  - Success: { "status": "success" }
  - Failure: { "status": "failure", "message": "Error message" }

